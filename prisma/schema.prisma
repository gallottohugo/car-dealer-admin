// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}


model User {
  @@map(name: "users")
  id          Int @id @default(autoincrement())
  email       String   @unique
  password    String  
  name        String?
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  // relations
}

model Dealer {
  @@map(name: "dealers")
  id          Int @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  // relations
  cars       Car[]
  services   Service[]
  contact    Contact?
  aboutUs    AboutUs?
  socialNetworks SocialNetwork[]
}

model Car {
  @@map(name: "cars")
  id          Int @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  // foreign keys
  dealerId    Int
  dealer      Dealer @relation(fields: [dealerId], references: [id])
  // relations
  buckets Bucket[]
  carProperty CarProperty?
}

model CarProperty {
  @@map(name: "car_properties")
  id          Int @id @default(autoincrement())
  // Options 
  //  1. Save key value (km = 1500) and a Car must have many properties
  //  2. Each property is a field and a Car have one property

  // foreign keys
  carId       Int @unique
  car         Car @relation(fields: [carId], references: [id])
}

model Bucket {
  @@map(name: "buckets")
  id          Int @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  // foreign keys
  carId       Int
  car         Car @relation(fields: [carId], references: [id])
  // relations
  images Image[]
}

model Image {
  @@map(name: "images")
  id          Int @id @default(autoincrement())
  name        String
  comment     String?
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  favorite    Boolean
  // foreign key
  bucketId    Int
  bucket      Bucket @relation(fields: [bucketId], references: [id])
}


model Service {
  @@map(name: "services")
  id          Int @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  // foreign keys
  dealerId    Int
  dealer      Dealer @relation(fields: [dealerId], references: [id])
}

model Contact {
  @@map(name: "contacts")
  id          Int @id @default(autoincrement())
  phone       String
  address     String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  // foreign keys
  dealerId    Int @unique
  dealer      Dealer @relation(fields: [dealerId], references: [id])
}

model AboutUs {
  @@map(name: "about_us")
  id          Int @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  // foreign keys
  dealerId    Int @unique
  dealer      Dealer @relation(fields: [dealerId], references: [id])
}

model SocialNetwork {
  @@map(name: "social_networks")
  id          Int @id @default(autoincrement())
  name        String
  url         String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  // foreign keys
  dealerId    Int
  dealer      Dealer @relation(fields: [dealerId], references: [id])
}
